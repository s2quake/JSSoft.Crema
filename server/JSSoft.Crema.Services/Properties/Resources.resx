<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Exception_CannotDeleteUserCategory" xml:space="preserve">
    <value>Folder could not be deleted because user exists.</value>
  </data>
  <data name="Exception_PermissionDenied" xml:space="preserve">
    <value>You do not have permission to perform the operation.</value>
  </data>
  <data name="Exception_CannotDeleteBaseTemplateTable" xml:space="preserve">
    <value>You can not delete a table that is the default template.</value>
  </data>
  <data name="Exception_CannotEndEdit" xml:space="preserve">
    <value>Unable to end editing.</value>
  </data>
  <data name="Message_DomainContextInitialize" xml:space="preserve">
    <value>DomainContext initialize.</value>
  </data>
  <data name="Message_DomainContextIsCreated" xml:space="preserve">
    <value>DomainContext is created.</value>
  </data>
  <data name="Message_DomainState_Format" xml:space="preserve">
    <value>&lt;{0} detection. {1} restored. {2} failed.&gt;</value>
  </data>
  <data name="Message_DomainIsRestored_Format" xml:space="preserve">
    <value>Domain restoration completed : {0}</value>
  </data>
  <data name="Message_DomainRestorationIsFailed_Format" xml:space="preserve">
    <value>Domain restoration failed : {0}</value>
  </data>
  <data name="Message_DomainRestorationMessage" xml:space="preserve">
    <value>A crash was detected. The previous session did not exit normally.
The server will automatically attempt to restore from a data not yet saved.</value>
  </data>
  <data name="Exception_InheritedTableCannotEditTemplate" xml:space="preserve">
    <value>상속받은 테이블은 테이블의 형태를 변경할 수 없습니다.</value>
  </data>
  <data name="Exception_InheritedTableCannotNewChild" xml:space="preserve">
    <value>상속받은 테이블은 자식 테이블을 생성할 수 없습니다.</value>
  </data>
  <data name="Exception_InvalidName_Format" xml:space="preserve">
    <value>'{0}' is incorrect name.</value>
  </data>
  <data name="Exception_InvalidUserID" xml:space="preserve">
    <value>It is not valid UserID</value>
  </data>
  <data name="Message_LoadTables" xml:space="preserve">
    <value>Load Tables</value>
  </data>
  <data name="Exception_LoggedInUserCannotDelete" xml:space="preserve">
    <value>로그인 되어 있는 아이디는 삭제할 수 없습니다.</value>
  </data>
  <data name="Message_NotFoundDomainsToRestore" xml:space="preserve">
    <value>There are no domains to restore.</value>
  </data>
  <data name="Message_ProgramInfo" xml:space="preserve">
    <value>{0} [Version {1}]</value>
  </data>
  <data name="Message_RestoreResult_Format" xml:space="preserve">
    <value>========= Restoration: Suceess {0}, Fail {1} ==========</value>
  </data>
  <data name="Exception_SameName" xml:space="preserve">
    <value>Can not change to the same name.</value>
  </data>
  <data name="Exception_SameTableNameExist" xml:space="preserve">
    <value>Table with same name already exists.</value>
  </data>
  <data name="Message_ServiceStart" xml:space="preserve">
    <value>===================  Service Start  ===================</value>
  </data>
  <data name="Message_TableContextInitialize" xml:space="preserve">
    <value>Table Context initialized.</value>
  </data>
  <data name="Message_TableContextIsCreated" xml:space="preserve">
    <value>Table Context created.</value>
  </data>
  <data name="Exception_TableIsBeingEdited_Format" xml:space="preserve">
    <value>'{0}' 테이블이 편집중입니다.</value>
  </data>
  <data name="Exception_TableIsBeingSetup_Format" xml:space="preserve">
    <value>'{0}' 테이블은 형태 변경중입니다.</value>
  </data>
  <data name="Message_TableLoadingIsCompleted" xml:space="preserve">
    <value>Table Loading completed.</value>
  </data>
  <data name="Exception_TypeIsBeingEdited_Format" xml:space="preserve">
    <value>'{0}' 타입이 편집중입니다.</value>
  </data>
  <data name="Message_UserContextInitialize" xml:space="preserve">
    <value>UserContext initialize.</value>
  </data>
  <data name="Message_UserContextIsCreated" xml:space="preserve">
    <value>UserContext is created.</value>
  </data>
  <data name="Exception_UserIDisAlreadyResitered" xml:space="preserve">
    <value>이미 등록된 아이디입니다.</value>
  </data>
  <data name="Exception_UserIDIsConnecting" xml:space="preserve">
    <value>현재 접속중인 아이디입니다.</value>
  </data>
  <data name="Exception_WrongIDOrPassword" xml:space="preserve">
    <value>Incorrect UserID or password</value>
  </data>
  <data name="Exception_SameTypeNameExist" xml:space="preserve">
    <value>Type with same name already exists.
</value>
  </data>
  <data name="Exception_Expired" xml:space="preserve">
    <value>It has been expired.</value>
  </data>
  <data name="Exception_Commissioned" xml:space="preserve">
    <value>It's already been commissioned.</value>
  </data>
  <data name="Exception_NotClosed" xml:space="preserve">
    <value>It is not closed.</value>
  </data>
  <data name="Exception_InvalidToken" xml:space="preserve">
    <value>It is not valid token</value>
  </data>
  <data name="Exception_InvalidObject" xml:space="preserve">
    <value>It is not valid object.</value>
  </data>
  <data name="Exception_NotInDataBase" xml:space="preserve">
    <value>It cannot work operation, because you are not in database</value>
  </data>
  <data name="Exception_InvalidPassword" xml:space="preserve">
    <value>It is not valid password</value>
  </data>
  <data name="Exception_EmptyStringCannotSend" xml:space="preserve">
    <value>Empty string cannot send.</value>
  </data>
  <data name="Exception_DataBaseHasBeenLoaded" xml:space="preserve">
    <value>DataBase has been loaded.</value>
  </data>
  <data name="Exception_DataBaseHasNotBeenLoaded" xml:space="preserve">
    <value>DataBase has not been loaded.</value>
  </data>
  <data name="Exception_AlreadyInDataBase" xml:space="preserve">
    <value>It is already in database</value>
  </data>
  <data name="Exception_LoadedDataBaseCannotRevert" xml:space="preserve">
    <value>It can not revert from loaded database.</value>
  </data>
  <data name="Exception_NotFoundRevision_Format" xml:space="preserve">
    <value>Revision '{0}' can not found.</value>
    <comment>revision</comment>
  </data>
  <data name="Exception_ExistsPath_Format" xml:space="preserve">
    <value>'{0}' path is already existed.</value>
  </data>
  <data name="Exception_DataBaseIsAlreadyExisted_Format" xml:space="preserve">
    <value>DataBase '{0}' is already existed.</value>
  </data>
  <data name="Exception_ItIsAlreadyBeingEdited" xml:space="preserve">
    <value>It is already being edited.</value>
  </data>
  <data name="Exception_ItemIsAlreadyLocked_Format" xml:space="preserve">
    <value>'{0}' is already locked.</value>
  </data>
  <data name="Exception_IncorrectPassword" xml:space="preserve">
    <value>Incorrect password.</value>
  </data>
  <data name="Exception_CannotChangeToOldPassword" xml:space="preserve">
    <value>Can not change to old password.</value>
  </data>
  <data name="Exception_EmptyStringIsNotAllowed" xml:space="preserve">
    <value>Empty string is not allowed.</value>
  </data>
  <data name="Exception_CannotSendMessageToOfflineUser" xml:space="preserve">
    <value>Can not send message to offline user.</value>
  </data>
  <data name="Exception_ChildTableCannotReadIndependently" xml:space="preserve">
    <value>Child tables can not read data independently.</value>
  </data>
  <data name="Exception_InheritedTableCannotSetTags" xml:space="preserve">
    <value>Inherited table can not set tags</value>
  </data>
  <data name="Exception_InheritedTableCannotSetComment" xml:space="preserve">
    <value>Inherited table can not set comment.</value>
  </data>
  <data name="Exception_ChildTableCannotCreateChildTable" xml:space="preserve">
    <value>Child table can not create child table.</value>
  </data>
  <data name="Exception_CannotRenameOnCreateChildTable" xml:space="preserve">
    <value>Can not rename on create child table</value>
  </data>
  <data name="Exception_CannotMoveOnCreateChildTable" xml:space="preserve">
    <value>Can not move on create child table.</value>
  </data>
  <data name="Exception_CannotDeleteOnCreateChildTable" xml:space="preserve">
    <value>Can not delete on create child table.</value>
  </data>
  <data name="Exception_CannotRenameOnCreateTable" xml:space="preserve">
    <value>Can not rename on create table.</value>
  </data>
  <data name="Exception_CannotMoveOnCreateTable" xml:space="preserve">
    <value>Can not move on create table.</value>
  </data>
  <data name="Exception_CannotDeleteOnCreateTable" xml:space="preserve">
    <value>Can not delete on create table.</value>
  </data>
  <data name="Exception_InheritedTableCannotInherit" xml:space="preserve">
    <value>Inherited table can not inherit.</value>
  </data>
  <data name="Exception_ChildTableCannotInherit" xml:space="preserve">
    <value>Child table can not inherit.</value>
  </data>
  <data name="Exception_ChildTableCannotCopy" xml:space="preserve">
    <value>Child table can not copy.</value>
  </data>
  <data name="Exception_SameNamePathExists" xml:space="preserve">
    <value>A path with the same name already exists.</value>
  </data>
  <data name="Exception_CannotDeletePathWithItems" xml:space="preserve">
    <value>Can not delete path with items.</value>
  </data>
  <data name="Exception_UnsavedDomainsExists_Format" xml:space="preserve">
    <value>There are domains that have not yet been saved: '{0}'</value>
  </data>
  <data name="Exception_TableIsNotBeingEdited" xml:space="preserve">
    <value>Table is not being edited.</value>
  </data>
  <data name="Exception_TableTemplateIsNotBeingEdited" xml:space="preserve">
    <value>Table template is not being edited.</value>
  </data>
  <data name="Exception_TypeIsNotBeingEdited" xml:space="preserve">
    <value>Type is not being edited.</value>
  </data>
  <data name="Exception_CannotRenameOnCreateType" xml:space="preserve">
    <value>Can not rename on create Type</value>
  </data>
  <data name="Exception_CannotMoveOnCreateType" xml:space="preserve">
    <value>Can not move on create Type</value>
  </data>
  <data name="Exception_CannotDeleteOnCreateType" xml:space="preserve">
    <value>Can not delete on create Type</value>
  </data>
  <data name="Exception_CannotDeleteTypeWithUsedTables" xml:space="preserve">
    <value>Can not delete type with used tables.</value>
  </data>
  <data name="Exception_InheritedTableTemplateCannotEdit" xml:space="preserve">
    <value>Inherited table template can not edit.</value>
  </data>
  <data name="Exception_ChildTableCannotEdit" xml:space="preserve">
    <value>Child table can not edit.</value>
  </data>
  <data name="Exception_PathIsNotEmptyDirectory" xml:space="preserve">
    <value>Path is not an empty directory.
</value>
  </data>
  <data name="Exception_NoRepositoryModule" xml:space="preserve">
    <value>There is no repository module to create</value>
  </data>
  <data name="Exception_DefaultDataBaseCannotRename" xml:space="preserve">
    <value>'default' database can not rename.</value>
  </data>
  <data name="Exception_DefaultDataBaseCannotDelete" xml:space="preserve">
    <value>'default' database can not delete.</value>
  </data>
  <data name="Exception_EmptyDataSetCannotImport" xml:space="preserve">
    <value>Empty dataset can not import.</value>
  </data>
  <data name="Exception_ItemPathChanged_Format" xml:space="preserve">
    <value>'{0}' has been changed : '{1}' to '{2}'.</value>
  </data>
  <data name="Exception_AtLeastOneColumnInTable" xml:space="preserve">
    <value>At least one column must exist in the table.</value>
  </data>
  <data name="Exception_AtLeastOneKeyInTable" xml:space="preserve">
    <value>At least one key must exist in the table.</value>
  </data>
  <data name="Exception_AtLeastOneMemberInType" xml:space="preserve">
    <value>At least one member must exist in the type.</value>
  </data>
  <data name="Exception_CannotRename" xml:space="preserve">
    <value>Can not rename.</value>
  </data>
  <data name="Exception_OwnerCannotKicked" xml:space="preserve">
    <value>Owner can not kicked</value>
  </data>
  <data name="Exception_CannotKickYourself" xml:space="preserve">
    <value>You can not kick yourself.</value>
  </data>
  <data name="Exception_UserIsNotInDomain_Format" xml:space="preserve">
    <value>'{0}' is not in domain.</value>
    <comment>userID</comment>
  </data>
  <data name="Exception_OfflineUserCannotKicked" xml:space="preserve">
    <value>Offline user can not kicked.</value>
  </data>
  <data name="Exception_CannotBanYourself" xml:space="preserve">
    <value>You can not ban yourself.</value>
  </data>
  <data name="Exception_UserIsNotBanned" xml:space="preserve">
    <value>User is not banned.</value>
  </data>
  <data name="Exception_UserIsAlreadyBanned" xml:space="preserve">
    <value>User is already banned.</value>
  </data>
  <data name="Exception_AdminCannotBanned" xml:space="preserve">
    <value>Admin can not banned.</value>
  </data>
  <data name="Exception_CannotDeleteYourself" xml:space="preserve">
    <value>You can not delete yourself.</value>
  </data>
  <data name="Exception_AdminCannotDeleted" xml:space="preserve">
    <value>Admin can not deleted.</value>
  </data>
  <data name="Exception_BannedUserCannotLogin" xml:space="preserve">
    <value>Banned user can not log in.</value>
  </data>
  <data name="Exception_UserIsNotLoggedIn" xml:space="preserve">
    <value>User is not logged in.</value>
  </data>
  <data name="Exception_UnsavedDataCannotEdit" xml:space="preserve">
    <value>Unsaved data can not edit.</value>
  </data>
  <data name="Exception_AdminCanChangeAdminInfo" xml:space="preserve">
    <value>"admin" only can change "admin" info</value>
  </data>
  <data name="Exception_OnlineUserAuthorityCannotChanged" xml:space="preserve">
    <value>Online user's authority can not changed.</value>
  </data>
  <data name="Exception_CannotChangeYourAuthority" xml:space="preserve">
    <value>You can not change your authority.</value>
  </data>
  <data name="Exception_CannotMoveToSamePath" xml:space="preserve">
    <value>Can not move to same path.</value>
  </data>
  <data name="Exception_ItemsPermissionDenined_Format" xml:space="preserve">
    <value>You do not have access to items in use: '{0}'</value>
  </data>
  <data name="Text_README" xml:space="preserve">
    <value># .repository

크레마 데이터가 실제로 저장되는 곳입니다. 이 폴더는 숨김 속성이 기본적으로 설정되어 있습니다.

숨김 속성으로 설정되어 있는 만큼 매우 중요한 폴더이기 때문에 건들이지 않는것을 추천합니다.

## databases
데이터 베이스가 저장되는 곳입니다.
## users
사용자 정보가 저장되는 곳입니다.
## repo
저장소의 형태를 나타내는 단순 텍스트 파일이다. 지원되는 모듈 타입은 'svn', 'git' 2가지 입니다.
## file
저장소의 데이터 형태를 나타내는 단순 텍스트 파일이다. 기본값은 'xml' 입니다.


# caches
크레마 시작시 빠른 실행을 위해서 각종 캐시 파일이 저장되어 있는 곳입니다.


# logs
로그를 기록 하는 곳입니다.
xml 포맷으로 저장되며 https://github.com/LukePet/YALV/releases 을(를) 사용해 로그 내용을 확인할 수 있습니다.


# databases
데이터 베이스가 활성화 되면 .repository/databases의 해당 브랜치를 가져옵니다.

svn일 경우에는 checkout을 git일 경우에는 clone을 수행합니다.

데이터 베이스가 비활성화 되면 해당 폴더는 삭제됩니다.

    checkout이나 clone된 대상은 데이터 베이스의 이름이 아닌 ID 형태로 폴더가 생성됩니다.


# users
크레마가 실행되면 .repository/users에서 사용자 정보를 가져옵니다.

svn일 경우에는 trunk 브랜치를 checkout하고 git일 경우에는 master 브랜치를 clone합니다.

크레마가 종료되면 해당 브랜치는 삭제됩니다.


# domains
도메인은 크레마에서 작업중인 내용을 나타냅니다. 타입의 형태편집, 테이블의 형태편집, 테이블의 내용편집시 작업 내용이 실시간으로 저장됩니다.

서버나 클라이언트의 비정상 종료시에도 도메인의 작업정보가 남아 있게 되기 때문에 언제나 복구가 가능합니다.

도메인의 구조는 다음과 같습니다.

    * 데이터베이스 ID
        - 도메인 ID
            * source
            * posted
            * completed
            * header.xml
            * 0.xml
            * 1.xml
            * ...

## source
source는 폴더이며 작업시작시 작업의 대상이 되는 객체가 serialize 되어 저장되는 곳입니다.

## posted
posted는 단순 텍스트 파일이며 사용자가 어떤 작업을 요청했는지에 대한 간략한 정보가 기록되는 곳입니다.

작업 요청시 아래와 같은 포맷으로 내용이 추가됩니다.

    {번호}\t{요청날짜}\t{작업종류}

### 예제
    0 2018-07-27T09:03:29.4661998+09:00 JSSoft.Crema.Services.Domains.Actions.JoinAction...
    1 2018-07-27T09:03:46.5129783+09:00 JSSoft.Crema.Services.Domains.Actions.NewRowAction...

## completed
completed는 posted파일과 비슷한 형태의 단순 텍스트 파일이며 요청된 작업중 성공적으로 수행한 것들만 기록되는 곳입니다.

    {번호}\t{요청날짜}

### 예제
    0 2018-07-27T09:03:29.4661998+09:00
    1 2018-07-27T09:03:46.5129783+09:00

도메인 복구시에는 completed에 기록된 작업만 수행하게 됩니다.

## header.xml
header.xml 은 도메인의 기본적인 정보가 기록되는 파일입니다. 

## 0.xml, 1.xml, ...
숫자로 명명된 이 파일들은 작업의 내용을 나타냅니다. 이 파일의 갯수는 posted에 기록된 작업 갯수와 동일합니다.

# documents
REPL 환경에서 작업한 내용이 Redirection 될때 또는 자바스크립트 실행시 설정되는 기본 경로입니다. 

* run -l &gt; crema.d.ts
* writeFileText("log.txt", "1");

위 예시처럼 절대경로가 아닌 파일명 또는 상태경로로 사용될 경우 documents 폴더가 기준이 됩니다.

# transactions
데이터 베이스에서 일괄 작업을 위해 작업이 완료되기 전까지 현재 데이터 베이스의 내용이 저장되는곳입니다.

# upgrade
데이터 베이스 업그레이드시 생성되는 폴더입니다. 


# validation
데이터 베이스 유효성 검사 수행시 생성되는 폴더입니다.


# config.xml
크레마의 설정이 저장되는 파일입니다.</value>
  </data>
</root>