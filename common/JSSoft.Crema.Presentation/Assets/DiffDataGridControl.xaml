<!--===================================================================================================================
Released under the MIT License.
    
Copyright (c) 2018 Ntreev Soft co., Ltd.

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated 
documentation files (the "Software"), to deal in the Software without restriction, including without limitation the 
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit 
persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the 
Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR 
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR 
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
====================================================================================================================-->
<ResourceDictionary x:Class="JSSoft.Crema.Presentation.Assets.DiffDataGridControl"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
                    xmlns:jmfc="clr-namespace:JSSoft.ModernUI.Framework.Controls;assembly=JSSoft.ModernUI.Framework"
                    xmlns:jmfv="clr-namespace:JSSoft.ModernUI.Framework.Converters;assembly=JSSoft.ModernUI.Framework"
                    xmlns:jmgc="clr-namespace:JSSoft.ModernUI.Framework.DataGrid.Controls;assembly=JSSoft.ModernUI.Framework.DataGrid"
                    xmlns:ncpc="clr-namespace:JSSoft.Crema.Presentation.Controls"
                    xmlns:ncpv="clr-namespace:JSSoft.Crema.Presentation.Converters"
                    xmlns:p="clr-namespace:JSSoft.Crema.Presentation.Properties">

    <jmfc:IconImage x:Key="icon_add" Source="/JSSoft.Crema.Presentation;component/Images/add.png" />
    <jmfc:IconImage x:Key="icon_right" Source="/JSSoft.Crema.Presentation;component/Images/arrow_right.png" />
    <jmfc:IconImage x:Key="icon_left" Source="/JSSoft.Crema.Presentation;component/Images/arrow_left.png" />
    <jmfc:IconImage x:Key="icon_delete" Source="/JSSoft.Crema.Presentation;component/Images/delete.png" />

    <ContextMenu x:Key="LeftSide_ContextMenu">
        <MenuItem Command="{x:Static ncpc:DiffCommands.AddItemToRightSide}" Icon="{StaticResource icon_add}" />
        <MenuItem Command="{x:Static ncpc:DiffCommands.CopyItemToRightSide}" Icon="{StaticResource icon_right}" />
        <MenuItem Command="{x:Static ncpc:DiffCommands.CopyFieldToRightSide}" />
        <MenuItem Command="{x:Static ncpc:DiffCommands.DeleteItemOfLeftSide}" Icon="{StaticResource icon_delete}" />
    </ContextMenu>

    <ContextMenu x:Key="RightSide_ContextMenu">
        <MenuItem Command="{x:Static ncpc:DiffCommands.AddItemToLeftSide}" Icon="{StaticResource icon_add}" />
        <MenuItem Command="{x:Static ncpc:DiffCommands.CopyItemToLeftSide}" Icon="{StaticResource icon_left}" />
        <MenuItem Command="{x:Static ncpc:DiffCommands.CopyFieldToLeftSide}" />
        <MenuItem Command="{x:Static ncpc:DiffCommands.DeleteItemOfRightSide}" Icon="{StaticResource icon_delete}" />
    </ContextMenu>

    <DataTemplate x:Key="Undo_DropDownTemplate">
        <ListBox ItemsSource="{Binding Path=(ncpc:DiffUndoService.UndoService).UndoItems, RelativeSource={RelativeSource Self}}" 
                 PreviewMouseLeftButtonUp="UndoListBox_PreviewMouseLeftButtonUp"
                 Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type jmfc:IconButton}}}" />
    </DataTemplate>

    <DataTemplate x:Key="Redo_DropDownTemplate">
        <ListBox ItemsSource="{Binding Path=(ncpc:DiffUndoService.UndoService).RedoItems, RelativeSource={RelativeSource Self}}" 
                 PreviewMouseLeftButtonUp="RedoListBox_PreviewMouseLeftButtonUp"
                 Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type jmfc:IconButton}}}" />
    </DataTemplate>

    <DataTemplate x:Key="Diff_DetailConfiguration_Title_Template">
        <TextBlock x:Name="tb" Margin="2 0" Text="{Binding Title}" Padding="5 2" />
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding DiffState}" Value="Modified">
                <Setter TargetName="tb" Property="TextElement.Foreground" Value="{DynamicResource ModifiedForeground}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DiffState}" Value="Deleted">
                <Setter TargetName="tb" Property="TextElement.Foreground" Value="{DynamicResource DeletedForeground}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DiffState}" Value="Inserted">
                <Setter TargetName="tb" Property="TextElement.Foreground" Value="{DynamicResource InsertedForeground}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DiffState}" Value="Imaginary">
                <Setter TargetName="tb" Property="TextElement.Foreground" Value="{DynamicResource ImaginaryForeground}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <xcdg:DefaultDetailConfiguration x:Key="DiffDataGridControl_DefaultDetailConfiguration" UseDefaultHeadersFooters="False" x:Shared="false">
        <xcdg:DefaultDetailConfiguration.Headers>
            <DataTemplate>
                <Grid xcdg:TableView.CanScrollHorizontally="False" Height="3" VerticalAlignment="Bottom"
                      xcdg:RowSelector.RowSelectorStyle="{DynamicResource DataRowSelector_Style}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <xcdg:HierarchicalGroupLevelIndicatorPane Grid.Column="0" Visibility="Hidden" xcdg:GroupLevelIndicatorPane.ShowIndicators="True" />
                    <xcdg:GroupLevelIndicatorPane Grid.Column="1" Visibility="Hidden" x:Name="glip" />
                    <Border Grid.Column="0" Grid.ColumnSpan="3" Height="1" BorderThickness="1 0 1 0" BorderBrush="{DynamicResource DataGridGridLines}" VerticalAlignment="Bottom" />
                    <Border Grid.Column="3" BorderThickness="0 0 1 1" BorderBrush="{DynamicResource DataGridGridLines}" />
                </Grid>
            </DataTemplate>
            <DataTemplate>
                <Grid xcdg:TableView.CanScrollHorizontally="False"
                      xcdg:RowSelector.RowSelectorStyle="{DynamicResource EmptyRowSelector_Style}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <xcdg:HierarchicalGroupLevelIndicatorPane Grid.Column="0" xcdg:GroupLevelIndicatorPane.ShowIndicators="True" />
                    <xcdg:GroupLevelIndicatorPane Grid.Column="1" Visibility="Hidden" />
                    <Border Grid.Column="1" BorderThickness="1 0 0 0" BorderBrush="{DynamicResource DataGridGridLines}" />
                    <Border Grid.Column="3" BorderBrush="{DynamicResource DataGridGridLines}" BorderThickness="0 0 1 1">
                        <ContentPresenter Content="{Binding Path=(xcdg:DataGridControl.DataGridContext).SourceDetailConfiguration.Title, RelativeSource={RelativeSource Self}}"
                                          ContentTemplate="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).SourceDetailConfiguration.TitleTemplate}" />
                    </Border>
                </Grid>
            </DataTemplate>
            <DataTemplate>
                <ncpc:DiffColumnManagerRow AllowSort="False" />
            </DataTemplate>
        </xcdg:DefaultDetailConfiguration.Headers>
    </xcdg:DefaultDetailConfiguration>

    <ControlTemplate x:Key="DiffHeaderedContentControl1_Template" TargetType="{x:Type HeaderedContentControl}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding HeaderActualWidth, RelativeSource={RelativeSource AncestorType={x:Type jmfc:PropertyItemsControl}}}" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="4" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <ContentPresenter x:Name="HeaderContent" ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Right" />
            <DockPanel Grid.Column="2">
                <ContentPresenter x:Name="contentPresenter" Margin="0 2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
            </DockPanel>
            <jmfc:IconButton Grid.Column="4" Source="/JSSoft.Crema.Presentation;component/Images/arrow_right.png" Focusable="False" Height="24"
                             Command="{Binding ElementName=contentPresenter, Path=Content.(ncpc:DiffCommands.Command)}"
                             CommandParameter="{Binding ElementName=contentPresenter, Path=Content.(ncpc:DiffCommands.CommandParameter)}"
                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}" DockPanel.Dock="Right" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="DiffHeaderedContentControl2_Template" TargetType="{x:Type HeaderedContentControl}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="4" />
                <ColumnDefinition Width="{Binding HeaderActualWidth, RelativeSource={RelativeSource AncestorType={x:Type jmfc:PropertyItemsControl}}}" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <ContentPresenter Grid.Column="2" x:Name="HeaderContent" ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Right" />
            <DockPanel Grid.Column="4">
                <ContentPresenter x:Name="contentPresenter" Margin="0 2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
            </DockPanel>
            <jmfc:IconButton Grid.Column="0" Source="/JSSoft.Crema.Presentation;component/Images/arrow_left.png" Focusable="False" Height="24"
                             Command="{Binding ElementName=contentPresenter, Path=Content.(ncpc:DiffCommands.Command)}"
                             CommandParameter="{Binding ElementName=contentPresenter, Path=Content.(ncpc:DiffCommands.CommandParameter)}"
                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}" DockPanel.Dock="Right" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="DiffDataContainer_Template" TargetType="{x:Type ncpc:DiffDataContainer}">
        <Grid x:Name="rootGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border x:Name="topBorder" Grid.Column="2" Grid.ColumnSpan="2" Margin="0 -1 0 0" xcdg:TableView.CanScrollHorizontally="False" 
                    Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" 
                    BorderThickness="0 1 0 0" Padding="{TemplateBinding Control.Padding}" Visibility="Collapsed" />
            <Border x:Name="rootBorder" Grid.Column="2" Grid.ColumnSpan="2" xcdg:TableView.CanScrollHorizontally="False" 
                    Background="{TemplateBinding Control.Background}" BorderBrush="Red" 
                    BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" />
            <xcdg:HierarchicalGroupLevelIndicatorPane Grid.Column="0" xcdg:TableView.CanScrollHorizontally="False" />
            <xcdg:GroupLevelIndicatorPane x:Name="groupLevelIndicatorPane" xcdg:TableView.CanScrollHorizontally="False" Grid.Column="1" />
            <Border x:Name="detailsToggle" Grid.Column="2" Visibility="Collapsed" xcdg:TableView.CanScrollHorizontally="False" 
                    BorderBrush="{DynamicResource DataGridGridLines}" BorderThickness="0 0 0 1">
                <Button x:Name="detailsToggle_Button" Template="{StaticResource detailsExpanderButtonTemplate}" VerticalAlignment="Top" 
                        Margin="2,4,2,0" OverridesDefaultStyle="True" Focusable="False" />
            </Border>
            <xcdg:FixedCellPanel x:Name="PART_CellsHost" Grid.Column="3" 
                                 Margin="{TemplateBinding Control.BorderThickness}" 
                                 ColumnStretchMinWidth="{Binding RelativeSource={RelativeSource Self}, 
                                                                 Path=(xcdg:DataGridControl.DataGridContext).ColumnStretchMinWidth}" 
                                 ColumnStretchMode="{Binding RelativeSource={RelativeSource Self}, 
                                                             Path=(xcdg:DataGridControl.DataGridContext).ColumnStretchMode}" 
                                 FixedCellCount="{Binding RelativeSource={RelativeSource Self}, Mode=TwoWay, 
                                                          Path=(xcdg:DataGridControl.DataGridContext).FixedColumnCount}" 
                                 FixedColumnDropMarkPen="{Binding RelativeSource={RelativeSource Self}, 
                                                                  Path=(xcdg:DataGridControl.DataGridContext).FixedColumnDropMarkPen}" />
            <Border x:Name="startSelectionBorder" BorderBrush="{DynamicResource WindowText}" BorderThickness="0 1 0 0" Margin="0 -1 0 0" 
                    Grid.Column="0" Grid.ColumnSpan="4" Visibility="Hidden"
                    xcdg:TableView.CanScrollHorizontally="False" />
            <Border x:Name="endSelectionBorder" BorderBrush="{DynamicResource WindowText}" BorderThickness="0 0 0 1" 
                    Grid.Column="0" Grid.ColumnSpan="4" Visibility="Hidden"
                    xcdg:TableView.CanScrollHorizontally="False" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsStartSelection" Value="True">
                <Setter TargetName="startSelectionBorder" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEndSelection" Value="True">
                <Setter TargetName="endSelectionBorder" Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridVirtualizingPanel.ItemIndex)}" Value="0">
                <Setter TargetName="startSelectionBorder" Property="Margin" Value="0" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).DataGridControl.SelectionUnit}" Value="Row" />
                </MultiDataTrigger.Conditions>
                <!--<MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundCurrent}" />
                    <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundCurrent}" />
                </MultiDataTrigger.Setters>-->
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).DataGridControl.IsKeyboardFocusWithin}" Value="True" />
                </MultiDataTrigger.Conditions>
                <!--<Setter TargetName="rootBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionBackground}" Property="Border.Background" />
                <Setter TargetName="rootGrid" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionForeground}" Property="TextElement.Foreground" />-->
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).DataGridControl.IsKeyboardFocusWithin}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).DataGridControl.HideSelection}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="rootBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InactiveSelectionBackground}" Property="Border.Background" />
                <Setter TargetName="rootGrid" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InactiveSelectionForeground}" Property="TextElement.Foreground" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).HasDetails}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).AllowDetailToggle}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="detailsToggle_Button" Value="{x:Static xcdg:DataGridCommands.ToggleDetailExpansion}" Property="ButtonBase.Command" />
                <Setter TargetName="detailsToggle" Property="UIElement.Visibility" Value="Visible" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DiffDataContainer_RowSelector_Template" TargetType="{x:Type xcdg:RowSelector}" >
        <Grid>
            <Border x:Name="rootBorder" Background="{TemplateBinding Background}" 
                    BorderBrush="{DynamicResource DataGridGridLines}"
                    BorderThickness="0 0 0 1">
                <Grid>
                    <Viewbox MaxHeight="16"
                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Viewbox>
                </Grid>
            </Border>
            <Thumb x:Name="PART_RowResizerThumb" VerticalAlignment="Bottom" Style="{StaticResource Invisible_Thumb_Style}" Visibility="Collapsed" />
            <Border x:Name="startSelectionBorder" BorderBrush="{DynamicResource WindowText}" BorderThickness="0 1 0 0" Margin="0 -1 0 0" Visibility="Hidden" />
            <Border x:Name="endSelectionBorder" BorderBrush="{DynamicResource WindowText}" BorderThickness="0 0 0 1" Visibility="Hidden" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.IsStartSelection}" Value="True">
                <Setter TargetName="startSelectionBorder" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.IsEndSelection}" Value="True">
                <Setter TargetName="endSelectionBorder" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.(xcdg:DataGridVirtualizingPanel.ItemIndex)}" Value="0">
                <Setter TargetName="startSelectionBorder" Property="Margin" Value="0" />
            </DataTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundPressed}" />
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundPressed}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundHover}" />
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundHover}" />
            </Trigger>
            <Trigger Property="IsCurrent" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundCurrent}" />
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundCurrent}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=DataContext.(jmgc:ModernDataGridControl.AllowHeightResize), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_RowResizerThumb" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DiffDataCell_Template" TargetType="{x:Type ncpc:DiffDataCell}">
        <Grid>
            <Border Padding="{TemplateBinding Padding}" 
                    BorderBrush="{DynamicResource DataGridGridLines}"
                    BorderThickness="0 0 0 1" 
                    Background="{TemplateBinding Background}">
                <xcdg:CellContentPresenter x:Name="PART_CellContentPresenter" 
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <Image x:Name="error_Image" Source="/JSSoft.ModernUI.Framework;component/Images/exclamation.png" HorizontalAlignment="Right" VerticalAlignment="Center" 
                   Stretch="None" Margin="5 0" Visibility="Hidden" />
            <Border x:Name="verticalGridLineBorder"
                    BorderBrush="{DynamicResource DataGridGridLines}"
                    BorderThickness="0 0 1 0" />
            <Border x:Name="InnerBorder" BorderThickness="1" BorderBrush="#8597bc" Visibility="Hidden" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsCurrent" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundSelected}" />
                    <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundSelected}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(xcdg:DataGridControl.DataGridContext).DataGridControl.SelectionUnit, RelativeSource={RelativeSource Self}}"
                               Value="Cell" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ParentRow.IsSelected}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundSelected}" />
                    <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundSelected}" />
                    <Setter TargetName="InnerBorder" Property="Visibility" Value="Hidden" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundHover}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundHover}" />
            </Trigger>

            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundSelected}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundSelected}" />
                <Setter TargetName="InnerBorder" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsCurrent" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundCurrent}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundCurrent}" />
                <Setter TargetName="InnerBorder" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsBeingEdited" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCellForeground}" />
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ParentRow.DiffState}" Value="Imaginary">
                <Setter TargetName="verticalGridLineBorder" Property="Visibility" Value="Hidden" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(jmgc:ModernDataGridControl.HasDataContextError)}" Value="True">
                <Setter TargetName="error_Image" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DiffDataContainderSelector_Style" TargetType="{x:Type xcdg:RowSelector}" BasedOn="{StaticResource {x:Type xcdg:RowSelector}}">
        <Setter Property="jmgc:ModernDataRow.IsDragOver" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Red" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.(xcdg:ViewBase.IsLastItem)}" Value="True">
                <Setter Property="BorderThickness" Value="0 1 0 1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.(xcdg:DataGridControl.HasExpandedDetails)}" Value="True">
                <Setter Property="BorderThickness" Value="0 1 0 1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundCurrent}" />
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundCurrent}" />
            </DataTrigger>
            <Trigger Property="jmgc:ModernDataRow.IsDragOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowBorder}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DiffDataCell_Style" TargetType="{x:Type ncpc:DiffDataCell}" BasedOn="{StaticResource {x:Type jmgc:ModernDataCell}}">
        <Setter Property="Template" Value="{StaticResource DiffDataCell_Template}" />
        <Style.Triggers>
            <Trigger Property="IsModified" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DeletedForeground}" />
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(jmgc:ModernDataGridControl.HasDataContextError), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="ToolTip" Value="{Binding Path=(jmgc:ModernDataGridControl.DataContextError), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Left_DiffDataCell_Style" TargetType="{x:Type ncpc:DiffDataCell}" BasedOn="{StaticResource {x:Type jmgc:ModernDataCell}}">
        <Setter Property="ContextMenu" Value="{StaticResource Left_ContextMenu}" />
        <Setter Property="Template" Value="{StaticResource DiffDataCell_Template}" />
        <Style.Triggers>
            <Trigger Property="IsModified" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DeletedForeground}" />
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Right_DiffDataCell_Style" TargetType="{x:Type ncpc:DiffDataCell}" BasedOn="{StaticResource {x:Type jmgc:ModernDataCell}}">
        <Setter Property="ContextMenu" Value="{StaticResource Right_ContextMenu}" />
        <Setter Property="Template" Value="{StaticResource DiffDataCell_Template}" />
        <Style.Triggers>
            <Trigger Property="IsModified" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DeletedForeground}" />
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DiffDataContainer_RowSelector_Style" TargetType="{x:Type xcdg:RowSelector}" BasedOn="{StaticResource DataRowSelector_Style}">
        <Setter Property="jmgc:ModernDataRow.IsDragOver" Value="False" />
        <Setter Property="Template" Value="{StaticResource DiffDataContainer_RowSelector_Template}" />
    </Style>

    <Style x:Key="DiffDataContainer_Style" TargetType="{x:Type ncpc:DiffDataContainer}" BasedOn="{StaticResource {x:Type jmgc:ModernDataRow}}" >
        <Setter Property="Height" Value="24" />
        <Setter Property="ReadOnly" Value="True" />
        <Setter Property="Template" Value="{StaticResource DiffDataContainer_Template}" />
        <Setter Property="xcdg:RowSelector.RowSelectorStyle" Value="{StaticResource DiffDataContainer_RowSelector_Style}" />
        <!--<Setter Property="Background" Value="{Binding DataContext, RelativeSource={RelativeSource Self}, Converter={StaticResource rowStateToBrushConverter}}" />-->
        <Style.Triggers>
            <Trigger Property="DiffState" Value="Modified">
                <Setter Property="Background" Value="{DynamicResource ModifiedBackground}" />
            </Trigger>
            <Trigger Property="DiffState" Value="Deleted">
                <Setter Property="Background" Value="{DynamicResource DeletedBackground}" />
            </Trigger>
            <Trigger Property="DiffState" Value="Inserted">
                <Setter Property="Background" Value="{DynamicResource InsertedBackground}" />
            </Trigger>
            <Trigger Property="DiffState" Value="Imaginary">
                <Setter Property="Background" Value="{DynamicResource ImaginaryBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ncpc:DiffDataContainer}" BasedOn="{StaticResource DiffDataContainer_Style}" />

    <Style TargetType="{x:Type ncpc:DiffDataGridControl}" BasedOn="{StaticResource {x:Type jmgc:ModernDataGridControl}}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    </Style>

    <Style TargetType="{x:Type ncpc:DiffColumnManagerCell}" BasedOn="{StaticResource {x:Type jmgc:ModernColumnManagerCell}}">
        <Style.Triggers>
            <Trigger Property="DiffState" Value="Modified">
                <Setter Property="TextElement.Foreground" Value="{DynamicResource ModifiedForeground}" />
            </Trigger>
            <Trigger Property="DiffState" Value="Deleted">
                <Setter Property="TextElement.Foreground" Value="{DynamicResource DeletedForeground}" />
            </Trigger>
            <Trigger Property="DiffState" Value="Inserted">
                <Setter Property="TextElement.Foreground" Value="{DynamicResource InsertedForeground}" />
            </Trigger>
            <Trigger Property="DiffState" Value="Imaginary">
                <Setter Property="TextElement.Foreground" Value="{DynamicResource ImaginaryForeground}" />
            </Trigger>
            <Trigger Property="IsDummy" Value="True">
                <Setter Property="TextElement.Foreground" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ncpc:DiffColumnManagerRow}" BasedOn="{StaticResource {x:Type jmgc:ModernColumnManagerRow}}">
        <Setter Property="AllowColumnReorder" Value="False" />
    </Style>

    <Style TargetType="{x:Type xcdg:RowSelector}" BasedOn="{StaticResource {x:Type xcdg:RowSelector}}">
    </Style>

    <Style x:Key="DiffPropertyItemsControl1_ItemContainerStyle" TargetType="{x:Type HeaderedContentControl}" BasedOn="{StaticResource PropertyItemsControl_ItemContainerStyle}">
        <Setter Property="Template" Value="{StaticResource DiffHeaderedContentControl1_Template}" />
    </Style>

    <Style x:Key="DiffPropertyItemsControl2_ItemContainerStyle" TargetType="{x:Type HeaderedContentControl}" BasedOn="{StaticResource PropertyItemsControl_ItemContainerStyle}">
        <Setter Property="Template" Value="{StaticResource DiffHeaderedContentControl2_Template}" />
    </Style>

    <Style x:Key="DiffPropertyItemsControl1_Style" TargetType="{x:Type jmfc:PropertyItemsControl}" BasedOn="{StaticResource {x:Type jmfc:PropertyItemsControl}}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource DiffPropertyItemsControl1_ItemContainerStyle}" />
    </Style>

    <Style x:Key="DiffPropertyItemsControl2_Style" TargetType="{x:Type jmfc:PropertyItemsControl}" BasedOn="{StaticResource {x:Type jmfc:PropertyItemsControl}}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource DiffPropertyItemsControl2_ItemContainerStyle}" />
    </Style>

    <DataTemplate x:Key="DiffContentControl_DataTemplate">
        <Label Content="{Binding}" Margin="4" HorizontalAlignment="Center" />
    </DataTemplate>

</ResourceDictionary>