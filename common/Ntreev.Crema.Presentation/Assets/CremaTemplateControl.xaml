<!--===================================================================================================================
Released under the MIT License.
    
Copyright (c) 2018 Ntreev Soft co., Ltd.

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated 
documentation files (the "Software"), to deal in the Software without restriction, including without limitation the 
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit 
persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the 
Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR 
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR 
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
====================================================================================================================-->
<ResourceDictionary x:Class="Ntreev.Crema.Presentation.Assets.CremaTemplateControl"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
                    xmlns:nmfc="clr-namespace:Ntreev.ModernUI.Framework.Controls;assembly=Ntreev.ModernUI.Framework"
                    xmlns:nmfv="clr-namespace:Ntreev.ModernUI.Framework.Converters;assembly=Ntreev.ModernUI.Framework"
                    xmlns:nmfm="clr-namespace:Ntreev.ModernUI.Framework.Markup;assembly=Ntreev.ModernUI.Framework"
                    xmlns:nmgc="clr-namespace:Ntreev.ModernUI.Framework.DataGrid.Controls;assembly=Ntreev.ModernUI.Framework.DataGrid"
                    xmlns:nmgm="clr-namespace:Ntreev.ModernUI.Framework.DataGrid.Markup;assembly=Ntreev.ModernUI.Framework.DataGrid"
                    xmlns:ncpc="clr-namespace:Ntreev.Crema.Presentation.Controls"
                    xmlns:ncpv="clr-namespace:Ntreev.Crema.Presentation.Converters">

    <!--<Style x:Key="Draggable_DataRowSelector_Style" TargetType="{x:Type xcdg:RowSelector}" BasedOn="{StaticResource DataRowSelector_Style}">
        <EventSetter Event="PreviewMouseLeftButtonDown" Handler="RowSelector_PreviewMouseLeftButtonDown" />
        <EventSetter Event="PreviewMouseMove" Handler="RowSelector_PreviewMouseMove" />
        <EventSetter Event="Drop" Handler="RowSelector_Drop" />
        <EventSetter Event="DragEnter" Handler="RowSelector_DragEnter" />
        <EventSetter Event="DragOver" Handler="RowSelector_DragOver" />
        <EventSetter Event="DragLeave" Handler="RowSelector_DragLeave" />
    </Style>-->

    <Style x:Key="DataTypeItem_Style" TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource Accent}" />
                            <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ncpv:SelectableTypesConverter x:Key="SelectableTypesConverter" />
    <ncpv:SelectableTypeConverter x:Key="SelectableTypeConverter" />

    <Style x:Key="SelectableType_ComboBoxItem_Style" TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border Width="10" />
                            <TextBlock Text="{Binding CategoryName}" Foreground="{DynamicResource ItemTextDisabled}" />
                        </StackPanel>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource Accent}" />
                            <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="TypeSelector_Template">
        <StackPanel x:Name="stackPanel" Orientation="Horizontal" Tag="{Binding Converter={StaticResource SelectableTypeConverter}}">
            <TextBlock Text="{Binding Tag.Name, ElementName=stackPanel}" />
            <Border Width="10" />
            <TextBlock Text="{Binding Tag.CategoryName, ElementName=stackPanel}" Foreground="{DynamicResource ItemTextDisabled}" />
        </StackPanel>
    </DataTemplate>

    <xcdg:CellEditor x:Key="TypeSelector">
        <xcdg:CellEditor.EditTemplate>
            <DataTemplate>
                <ComboBox SelectedItem="{nmgm:EditingContentBinding Converter={StaticResource SelectableTypeConverter}}" 
                          Margin="-4 0" BorderThickness="0" Padding="0" Background="Transparent"
                          xcdg:DataCell.IsCellFocusScope="False"
                          IsEditable="True" IsTabStop="False"
                          Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type xcdg:Cell}}}" 
                          ItemsSource="{Binding Path=SelectableTypes, RelativeSource={RelativeSource AncestorType={x:Type ncpc:CremaTemplateControl}}, Converter={StaticResource SelectableTypesConverter}}" 
                          DisplayMemberPath="Name"
                          DropDownOpened="ComboBox_DropDownOpened" DropDownClosed="ComboBox_DropDownClosed" 
                          Template="{StaticResource DataCell_Editable_ComboBox_Template}"
                          ItemContainerStyle="{StaticResource SelectableType_ComboBoxItem_Style}">
                    <ComboBox.Resources>
                        <Style TargetType="{x:Type Popup}">
                            <Setter Property="PlacementTarget" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type xcdg:Cell}}}" />
                        </Style>
                    </ComboBox.Resources>
                </ComboBox>
            </DataTemplate>
        </xcdg:CellEditor.EditTemplate>
        <xcdg:CellEditor.ActivationGestures>
            <xcdg:TextInputActivationGesture />
        </xcdg:CellEditor.ActivationGestures>
    </xcdg:CellEditor>

    <ControlTemplate x:Key="CremaTemplateControl_Template" TargetType="{x:Type ncpc:CremaTemplateControl}">
        <nmgc:ModernDataGridControl x:Name="PART_DataGridControl"
                                    AllowRowDrag="True"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    ReadOnly="{Binding Path=ReadOnly, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}">
            <nmgc:ModernDataGridControl.Columns>
                <!--<xcdg:Column FieldName="Index" Title="Index" ReadOnly="True" />-->
            </nmgc:ModernDataGridControl.Columns>
            <nmgc:ModernDataGridControl.View>
                <xcdg:TableView RowSelectorPaneWidth="50" AllowDrop="True" 
                                VerticalGridLineBrush="{DynamicResource DataGridGridLines}" 
                                HorizontalGridLineBrush="{DynamicResource DataGridGridLines}" 
                                IsAlternatingRowStyleEnabled="False" AllowRowResize="True">
                    <xcdg:TableView.FixedHeaders>
                        <DataTemplate>
                            <Label Content="구현" x:Name="InsertionRow" />
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=ReadOnly, RelativeSource={RelativeSource AncestorType={x:Type xcdg:DataGridControl}}}" Value="True">
                                    <Setter TargetName="InsertionRow" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                        <DataTemplate>
                            <Border x:Name="RowSplitter" BorderThickness="0 0 0 1" Height="3"
                                    BorderBrush="{DynamicResource DataGridGridLines}" 
                                    xcdg:RowSelector.RowSelectorStyle="{DynamicResource EmptyRowSelector_Style}"
                                    xcdg:TableView.CanScrollHorizontally="False" />
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=ReadOnly, RelativeSource={RelativeSource AncestorType={x:Type xcdg:DataGridControl}}}" Value="True">
                                    <Setter TargetName="RowSplitter" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </xcdg:TableView.FixedHeaders>
                </xcdg:TableView>
            </nmgc:ModernDataGridControl.View>
        </nmgc:ModernDataGridControl>
    </ControlTemplate>

    <Style TargetType="{x:Type ncpc:CremaTemplateControl}">
        <Style.Resources>
            <Style TargetType="{x:Type xcdg:HierarchicalGroupByControl}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Style>
        </Style.Resources>
        <Setter Property="BorderBrush" Value="{DynamicResource ItemBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template" Value="{StaticResource CremaTemplateControl_Template}" />
    </Style>

</ResourceDictionary>