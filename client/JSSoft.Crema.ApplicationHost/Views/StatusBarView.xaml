<!-- Released under the MIT License.

Copyright (c) 2018 Ntreev Soft co., Ltd.
Copyright (c) 2020 Jeesu Choi

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Forked from https://github.com/NtreevSoft/Crema
Namespaces and files starting with "Ntreev" have been renamed to "JSSoft". -->

<UserControl x:Class="JSSoft.Crema.ApplicationHost.Views.StatusBarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:jmfc="clr-namespace:JSSoft.ModernUI.Framework.Controls;assembly=JSSoft.ModernUI.Framework"
             xmlns:jmfv="clr-namespace:JSSoft.ModernUI.Framework.Converters;assembly=JSSoft.ModernUI.Framework"
             xmlns:p="clr-namespace:JSSoft.Crema.ApplicationHost.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="24" d:DesignWidth="800" >

    <UserControl.Resources>
        <Style x:Key="IconButton_Style" TargetType="{x:Type jmfc:IconButton}" BasedOn="{StaticResource {x:Type jmfc:IconButton}}">
            <Setter Property="Foreground" Value="{DynamicResource WindowBackground}" />
            <Setter Property="Background" Value="{DynamicResource WindowBorder}" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>

        <Style x:Key="LocationStatusBarItem_Style" TargetType="{x:Type StatusBarItem}">
            <Style.Resources>
                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                    <Setter Property="Foreground" Value="{DynamicResource WindowBackground}" />
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <DataTrigger Binding="{Binding LineInfo}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Target_TextBlock_Style" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="Foreground" Value="{DynamicResource WindowBackground}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding LineInfo.DisplayName}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <DataTrigger Binding="{Binding LineInfo.DisplayName}" Value="">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <jmfv:InverseBooleanConverter x:Key="inverseBooleanConverter" />

        <Style x:Key="Task_IconButton_Style" TargetType="{x:Type jmfc:IconButton}" BasedOn="{StaticResource {x:Type jmfc:IconButton}}">
            <Setter Property="Background" Value="{DynamicResource Accent}" />
            <Setter Property="Source" Value="/cremaApp;component/Images/task.png" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource WindowBorder}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Task_ProgressBar_Style" TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource {x:Type ProgressBar}}">
            <Setter Property="Value" Value="{Binding SelectedTask.ProgressValue, Mode=OneWay}" />
            <Setter Property="Foreground" Value="{DynamicResource WindowBorder}" />
            <Setter Property="Minimum" Value="0" />
            <Setter Property="Maximum" Value="100" />
            <Setter Property="Width" Value="100" />
            <Setter Property="Height" Value="18" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding SelectedTask}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="LastStatusBarItem_Style" TargetType="{x:Type StatusBarItem}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding MainWindow.WindowState, Source={x:Static Application.Current}}" Value="Normal">
                    <Setter Property="Margin" Value="0 0 30 0" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <jmfv:ColorToBrushConverter x:Key="colorToBrushConverter" />

        <DataTemplate x:Key="DataBase_MenuItem_HeaderTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Width="20" Background="{Binding ThemeColor, Converter={StaticResource colorToBrushConverter}}" />
                <TextBlock Grid.Column="2" Text="{Binding DataBaseName}" />
            </Grid>
        </DataTemplate>
        
    </UserControl.Resources>

    <StatusBar Background="{DynamicResource WindowBorderActive}">
        <StatusBar.ItemsPanel>
            <ItemsPanelTemplate>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                </Grid>
            </ItemsPanelTemplate>
        </StatusBar.ItemsPanel>
        <StatusBarItem Grid.Column="0">
            <jmfc:IconButton x:Name="taskIcon" Style="{StaticResource Task_IconButton_Style}" />
        </StatusBarItem>
        <StatusBarItem Grid.Column="1">
            <ProgressBar Style="{StaticResource Task_ProgressBar_Style}" />
        </StatusBarItem>
        <StatusBarItem Grid.Column="2">
            <TextBlock Text="{Binding Message}" Foreground="{DynamicResource WindowBackground}" />
        </StatusBarItem>
        <StatusBarItem Grid.Column="3" Style="{StaticResource LocationStatusBarItem_Style}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{x:Static p:Resources.Label_Target}" Style="{StaticResource Target_TextBlock_Style}" />
                <TextBlock Text="{Binding LineInfo.DisplayName, StringFormat=: {0}}" Margin="0 0 50 0" Style="{StaticResource Target_TextBlock_Style}" />
                <TextBlock Text="{x:Static p:Resources.Label_Row}" />
                <TextBlock Text="{Binding LineInfo.Row, StringFormat=: {0}}" Margin="0 0 50 0" />
                <TextBlock Text="{x:Static p:Resources.Label_Column}" />
                <TextBlock Text="{Binding LineInfo.Column, StringFormat=: {0}}" Margin="0 0 50 0" />
            </StackPanel>
        </StatusBarItem>

        <StatusBarItem Grid.Column="4" HorizontalContentAlignment="Right" Style="{StaticResource LastStatusBarItem_Style}">
            <StackPanel Orientation="Horizontal">
                <Button x:Name="dataBaseButton" Content="{Binding DataBaseName, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, FallbackValue=default}" 
                        IsEnabled="{Binding CremaAppHost.IsProgressing, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Converter={StaticResource inverseBooleanConverter}}"
                        BorderThickness="0" Click="DataBaseButton_Click" Padding="16 3" />
            </StackPanel>
        </StatusBarItem>
    </StatusBar>
</UserControl>
