<UserControl x:Class="JSSoft.Crema.Presentation.Home.Services.Views.ConnectionListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:jmfv="clr-namespace:JSSoft.ModernUI.Framework.Converters;assembly=JSSoft.ModernUI.Framework"
             xmlns:jmfc="clr-namespace:JSSoft.ModernUI.Framework.Controls;assembly=JSSoft.ModernUI.Framework"
             xmlns:vm="clr-namespace:JSSoft.Crema.Presentation.Home.Services.ViewModels"
             mc:Ignorable="d" Loaded="UserControl_Loaded"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <jmfv:ColorToBrushConverter x:Key="ColorToBrushConverter" />

        <ControlTemplate x:Key="ConnectionListBoxItem_Template" TargetType="{x:Type ListBoxItem}">
            <Grid>
                <Border Background="Transparent" BorderThickness="1" x:Name="back" Margin="2" Opacity="0.3" />
                <ContentPresenter Margin="8" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" />
                <Border Background="Transparent" BorderThickness="1" x:Name="border" Margin="2" SnapsToDevicePixels="True" />
            </Grid>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                        <Condition Property="IsSelected" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="back" Property="Background" Value="{DynamicResource WindowBorderActive}" />
                    <Setter TargetName="back" Property="Opacity" Value="0.1" />
                </MultiTrigger>
                <Trigger Property="IsSelected" Value="true">
                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource WindowBorderActive}" />
                    <Setter TargetName="back" Property="Background" Value="{DynamicResource WindowBorderActive}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <DataTemplate DataType="{x:Type vm:ConnectionItemViewModel}">
            <ContentControl>
                <Grid Width="157" Height="133">
                    <Path Data="F1 M0.5,0.5 L134.5,0.5 134.5,22.5 156.5,22.5 156.5,132.5 0.5,132.5 0.5,0.5 z M156.5,22.5 L134.5,22.5 156.5,22.5 z" 
                          Stroke="{DynamicResource InputBorder}" Margin="-0.5,-0.5,0,0" 
                          StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" />
                    <Path x:Name="themePath" Data="F1 M0.5,0.5 L0.5,22.5 22.5,22.5 z M22.5,22.5 L0.5,0.5 0.5,22.5 22.5,22.5 z" 
                          Fill="Black"  Stroke="{DynamicResource InputBorder}" Margin="133.5,-0.5,0,0" 
                          StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round"
                          HorizontalAlignment="Left" VerticalAlignment="Top" />
                    <Path Data="F1 M0.5,0.5 L20.5,0.5 20.5,132.5 0.5,132.5 0.5,0.5 z" 
                          Fill="{Binding ThemeColor, Converter={StaticResource ColorToBrushConverter}, FallbackValue=#1ba1e2}" 
                          Stroke="{DynamicResource InputBorder}" Margin="-0.5,-0.5,69.5,-0.5" StrokeStartLineCap="Round" 
                          StrokeEndLineCap="Round" StrokeLineJoin="Round" />
                    <StackPanel Margin="25 10 2 2" Focusable="False" FocusVisualStyle="{x:Null}">
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type jmfc:HighlightTextBlock}" BasedOn="{StaticResource {x:Type jmfc:HighlightTextBlock}}">
                                <Setter Property="Margin" Value="2" />
                                <Style.Triggers>
                                    <Trigger Property="jmfc:TextBlockService.IsTextTrimmed" Value="True">
                                        <Setter Property="ToolTip" Value="{Binding Text, RelativeSource={RelativeSource Self}}" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding HasPattern}" Value="True">
                                        <Setter Property="Pattern" Value="{Binding Pattern}" />
                                        <Setter Property="CaseSensitive" Value="{Binding CaseSensitive}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Resources>
                        <jmfc:IconImage x:Name="temporary_icon" Source="/JSSoft.Crema.Presentation.Home;component/Images/lock.png" HorizontalAlignment="Left" Visibility="Hidden" />
                        <jmfc:HighlightTextBlock Text="{Binding Name, FallbackValue=Connection}" />
                        <jmfc:HighlightTextBlock Text="{Binding Address, FallbackValue=127.0.0.1:5005}" TextTrimming="CharacterEllipsis" jmfc:TextBlockService.ShowTrimmedText="True" />
                        <jmfc:HighlightTextBlock Text="{Binding ID, FallbackValue=Admin}" />
                        <jmfc:HighlightTextBlock Text="{Binding DataBaseName, FallbackValue=Default}" />
                    </StackPanel>
                </Grid>
            </ContentControl>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Theme}" Value="Light">
                    <Setter TargetName="themePath" Property="Fill" Value="White" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsCurrentTheme}" Value="True">
                    <Setter TargetName="themePath" Property="Fill" Value="Transparent" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsTemporary}" Value="True">
                    <Setter TargetName="temporary_icon" Property="Visibility" Value="Visible" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <ControlTemplate x:Key="ConnectionListBox_Template">
            <ContentControl>
                <ScrollViewer>
                    <ItemsPresenter />
                </ScrollViewer>
            </ContentControl>
        </ControlTemplate>

        <Style x:Key="ConnectionListBoxItem_Style" TargetType="{x:Type ListBoxItem}">
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListBoxItem_MouseLeftButtonDown" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Template" Value="{StaticResource ConnectionListBoxItem_Template}" />
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <jmfc:ModernContextMenu ItemsSource="{Binding ContextMenus}" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsVisible}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ListBox}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="Template" Value="{StaticResource ConnectionListBox_Template}" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource ConnectionListBoxItem_Style}" />
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <ListBox x:Name="ListBox" ItemsSource="{Binding ConnectionItems}" SelectedItem="{Binding ConnectionItem, Mode=TwoWay, Delay=100}" />

</UserControl>
