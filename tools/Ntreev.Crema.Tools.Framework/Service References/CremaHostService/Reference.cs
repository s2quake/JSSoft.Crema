//Released under the MIT License.
//
//Copyright (c) 2018 Ntreev Soft co., Ltd.
//
//Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated 
//documentation files (the "Software"), to deal in the Software without restriction, including without limitation the 
//rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit 
//persons to whom the Software is furnished to do so, subject to the following conditions:
//
//The above copyright notice and this permission notice shall be included in all copies or substantial portions of the 
//Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
//WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR 
//COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR 
//OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ntreev.Crema.Tools.Framework.CremaHostService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.ntreev.com", ConfigurationName="CremaHostService.ICremaHostService", CallbackContract=typeof(Ntreev.Crema.Tools.Framework.CremaHostService.ICremaHostServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    internal interface ICremaHostService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/ICremaHostService/Subscribe", ReplyAction="http://www.ntreev.com/ICremaHostService/SubscribeResponse")]
        Ntreev.Crema.ServiceModel.ResultBase<System.Guid> Subscribe(string userID, byte[] password, string version, string platformID, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/ICremaHostService/Subscribe", ReplyAction="http://www.ntreev.com/ICremaHostService/SubscribeResponse")]
        System.Threading.Tasks.Task<Ntreev.Crema.ServiceModel.ResultBase<System.Guid>> SubscribeAsync(string userID, byte[] password, string version, string platformID, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/ICremaHostService/Unsubscribe", ReplyAction="http://www.ntreev.com/ICremaHostService/UnsubscribeResponse")]
        Ntreev.Crema.ServiceModel.ResultBase Unsubscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/ICremaHostService/Unsubscribe", ReplyAction="http://www.ntreev.com/ICremaHostService/UnsubscribeResponse")]
        System.Threading.Tasks.Task<Ntreev.Crema.ServiceModel.ResultBase> UnsubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/ICremaHostService/GetVersion", ReplyAction="http://www.ntreev.com/ICremaHostService/GetVersionResponse")]
        Ntreev.Crema.ServiceModel.ResultBase<string> GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/ICremaHostService/GetVersion", ReplyAction="http://www.ntreev.com/ICremaHostService/GetVersionResponse")]
        System.Threading.Tasks.Task<Ntreev.Crema.ServiceModel.ResultBase<string>> GetVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/ICremaHostService/IsOnline", ReplyAction="http://www.ntreev.com/ICremaHostService/IsOnlineResponse")]
        Ntreev.Crema.ServiceModel.ResultBase<bool> IsOnline(string userID, byte[] password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/ICremaHostService/IsOnline", ReplyAction="http://www.ntreev.com/ICremaHostService/IsOnlineResponse")]
        System.Threading.Tasks.Task<Ntreev.Crema.ServiceModel.ResultBase<bool>> IsOnlineAsync(string userID, byte[] password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/ICremaHostService/GetDataBaseInfos", ReplyAction="http://www.ntreev.com/ICremaHostService/GetDataBaseInfosResponse")]
        Ntreev.Crema.ServiceModel.ResultBase<Ntreev.Crema.ServiceModel.DataBaseInfo[]> GetDataBaseInfos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/ICremaHostService/GetDataBaseInfos", ReplyAction="http://www.ntreev.com/ICremaHostService/GetDataBaseInfosResponse")]
        System.Threading.Tasks.Task<Ntreev.Crema.ServiceModel.ResultBase<Ntreev.Crema.ServiceModel.DataBaseInfo[]>> GetDataBaseInfosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/ICremaHostService/GetServiceInfo", ReplyAction="http://www.ntreev.com/ICremaHostService/GetServiceInfoResponse")]
        Ntreev.Crema.ServiceModel.ResultBase<Ntreev.Crema.ServiceModel.ServiceInfo> GetServiceInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/ICremaHostService/GetServiceInfo", ReplyAction="http://www.ntreev.com/ICremaHostService/GetServiceInfoResponse")]
        System.Threading.Tasks.Task<Ntreev.Crema.ServiceModel.ResultBase<Ntreev.Crema.ServiceModel.ServiceInfo>> GetServiceInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/ICremaHostService/Shutdown", ReplyAction="http://www.ntreev.com/ICremaHostService/ShutdownResponse")]
        Ntreev.Crema.ServiceModel.ResultBase Shutdown(int milliseconds, Ntreev.Crema.ServiceModel.ShutdownType shutdownType, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/ICremaHostService/Shutdown", ReplyAction="http://www.ntreev.com/ICremaHostService/ShutdownResponse")]
        System.Threading.Tasks.Task<Ntreev.Crema.ServiceModel.ResultBase> ShutdownAsync(int milliseconds, Ntreev.Crema.ServiceModel.ShutdownType shutdownType, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/ICremaHostService/CancelShutdown", ReplyAction="http://www.ntreev.com/ICremaHostService/CancelShutdownResponse")]
        Ntreev.Crema.ServiceModel.ResultBase CancelShutdown();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/ICremaHostService/CancelShutdown", ReplyAction="http://www.ntreev.com/ICremaHostService/CancelShutdownResponse")]
        System.Threading.Tasks.Task<Ntreev.Crema.ServiceModel.ResultBase> CancelShutdownAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/ICremaHostService/IsAlive", ReplyAction="http://www.ntreev.com/ICremaHostService/IsAliveResponse")]
        bool IsAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/ICremaHostService/IsAlive", ReplyAction="http://www.ntreev.com/ICremaHostService/IsAliveResponse")]
        System.Threading.Tasks.Task<bool> IsAliveAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface ICremaHostServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://www.ntreev.com/ICremaHostService/OnServiceClosed")]
        void OnServiceClosed(Ntreev.Crema.ServiceModel.CallbackInfo callbackInfo, Ntreev.Crema.ServiceModel.CloseInfo closeInfo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://www.ntreev.com/ICremaHostService/OnTaskCompleted")]
        void OnTaskCompleted(Ntreev.Crema.ServiceModel.CallbackInfo callbackInfo, System.Guid[] taskIDs);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface ICremaHostServiceChannel : Ntreev.Crema.Tools.Framework.CremaHostService.ICremaHostService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class CremaHostServiceClient : System.ServiceModel.DuplexClientBase<Ntreev.Crema.Tools.Framework.CremaHostService.ICremaHostService>, Ntreev.Crema.Tools.Framework.CremaHostService.ICremaHostService {
        
        public CremaHostServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CremaHostServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CremaHostServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CremaHostServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CremaHostServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public Ntreev.Crema.ServiceModel.ResultBase<System.Guid> Subscribe(string userID, byte[] password, string version, string platformID, string culture) {
            return base.Channel.Subscribe(userID, password, version, platformID, culture);
        }
        
        public System.Threading.Tasks.Task<Ntreev.Crema.ServiceModel.ResultBase<System.Guid>> SubscribeAsync(string userID, byte[] password, string version, string platformID, string culture) {
            return base.Channel.SubscribeAsync(userID, password, version, platformID, culture);
        }
        
        public Ntreev.Crema.ServiceModel.ResultBase Unsubscribe() {
            return base.Channel.Unsubscribe();
        }
        
        public System.Threading.Tasks.Task<Ntreev.Crema.ServiceModel.ResultBase> UnsubscribeAsync() {
            return base.Channel.UnsubscribeAsync();
        }
        
        public Ntreev.Crema.ServiceModel.ResultBase<string> GetVersion() {
            return base.Channel.GetVersion();
        }
        
        public System.Threading.Tasks.Task<Ntreev.Crema.ServiceModel.ResultBase<string>> GetVersionAsync() {
            return base.Channel.GetVersionAsync();
        }
        
        public Ntreev.Crema.ServiceModel.ResultBase<bool> IsOnline(string userID, byte[] password) {
            return base.Channel.IsOnline(userID, password);
        }
        
        public System.Threading.Tasks.Task<Ntreev.Crema.ServiceModel.ResultBase<bool>> IsOnlineAsync(string userID, byte[] password) {
            return base.Channel.IsOnlineAsync(userID, password);
        }
        
        public Ntreev.Crema.ServiceModel.ResultBase<Ntreev.Crema.ServiceModel.DataBaseInfo[]> GetDataBaseInfos() {
            return base.Channel.GetDataBaseInfos();
        }
        
        public System.Threading.Tasks.Task<Ntreev.Crema.ServiceModel.ResultBase<Ntreev.Crema.ServiceModel.DataBaseInfo[]>> GetDataBaseInfosAsync() {
            return base.Channel.GetDataBaseInfosAsync();
        }
        
        public Ntreev.Crema.ServiceModel.ResultBase<Ntreev.Crema.ServiceModel.ServiceInfo> GetServiceInfo() {
            return base.Channel.GetServiceInfo();
        }
        
        public System.Threading.Tasks.Task<Ntreev.Crema.ServiceModel.ResultBase<Ntreev.Crema.ServiceModel.ServiceInfo>> GetServiceInfoAsync() {
            return base.Channel.GetServiceInfoAsync();
        }
        
        public Ntreev.Crema.ServiceModel.ResultBase Shutdown(int milliseconds, Ntreev.Crema.ServiceModel.ShutdownType shutdownType, string message) {
            return base.Channel.Shutdown(milliseconds, shutdownType, message);
        }
        
        public System.Threading.Tasks.Task<Ntreev.Crema.ServiceModel.ResultBase> ShutdownAsync(int milliseconds, Ntreev.Crema.ServiceModel.ShutdownType shutdownType, string message) {
            return base.Channel.ShutdownAsync(milliseconds, shutdownType, message);
        }
        
        public Ntreev.Crema.ServiceModel.ResultBase CancelShutdown() {
            return base.Channel.CancelShutdown();
        }
        
        public System.Threading.Tasks.Task<Ntreev.Crema.ServiceModel.ResultBase> CancelShutdownAsync() {
            return base.Channel.CancelShutdownAsync();
        }
        
        public bool IsAlive() {
            return base.Channel.IsAlive();
        }
        
        public System.Threading.Tasks.Task<bool> IsAliveAsync() {
            return base.Channel.IsAliveAsync();
        }
    }
}
